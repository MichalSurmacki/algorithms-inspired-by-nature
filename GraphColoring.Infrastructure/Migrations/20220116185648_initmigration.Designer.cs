// <auto-generated />
using GraphColoring.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphColoring.Infrastructure.Migrations
{
    [DbContext(typeof(GraphColoringContext))]
    [Migration("20220116185648_initmigration")]
    partial class initmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphColoring.Domain.Entities.AlgorithmResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColoredNodes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GraphId")
                        .HasColumnType("int");

                    b.Property<string>("JsonInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfColors")
                        .HasColumnType("int");

                    b.Property<long>("TimeInMiliseconds")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GraphId");

                    b.ToTable("AlgorithmResults");
                });

            modelBuilder.Entity("GraphColoring.Domain.Entities.Graph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdjacencyMatrix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("GraphColoring.Domain.Entities.AlgorithmResult", b =>
                {
                    b.HasOne("GraphColoring.Domain.Entities.Graph", "Graph")
                        .WithMany("Results")
                        .HasForeignKey("GraphId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Graph");
                });

            modelBuilder.Entity("GraphColoring.Domain.Entities.Graph", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
